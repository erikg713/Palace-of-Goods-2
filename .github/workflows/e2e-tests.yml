name: e2e tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

jobs:
  test-setup-python:
    name: Test setup-python
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system:
          - ubuntu-22.04
          - windows-latest
          - macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install system dependencies (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libpq-dev build-essential

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Python version
        run: python -c "import sys; assert sys.version_info[:2] == (3, 9)"

      - name: Run tests
        run: pytest tests/

  test-setup-node:
    name: Test setup-node
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system:
          - ubuntu-22.04
          - windows-latest
          - macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Node.js dependencies
        run: npm install

      - name: Verify Node.js version
        run: node -v

      - name: Run tests
        run: npm test
